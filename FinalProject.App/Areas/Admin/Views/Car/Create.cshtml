@model CarPostDto
<div class="container">
	<form method="post" enctype="multipart/form-data">
		<div class="text text-danger" asp-validation-summary="ModelOnly"></div>
	    <div class="form-group">
			<label asp-for="Vin">Vin:</label>
			<input type="text" class="form-control" asp-for="Vin" />
			<span asp-validation-for="Vin" class="text text-danger"></span>
	    </div>
		<div class="form-group">
			<div class="row">
				<div class="col-sm">
					<label>Brand</label>
					<select class="form-select" name="Brand" id="brandInput" aria-label="Default select example">
						@foreach (var item in ViewBag.Brands)
						{
							<option value="@item.Id">@item.Name</option>
						}
					</select>
					<span asp-validation-for="ModelId" class="text text-danger"></span>
				</div>
				<div class="col-sm">
					<label asp-for="BanId">Ban:</label>
					<select asp-for="BanId"  class="form-select" aria-label="Default select example">
						@foreach (var item in ViewBag.Bans)
						{
							<option value="@item.Id">@item.Name</option>
						}
					</select>
					<span asp-validation-for="BanId" class="text text-danger"></span>
				</div>
			</div>
		</div>
		<div class="form-group">
			<div class="row">
				<div class="col-sm">
					<label asp-for="ModelId">Model:</label>
					<select asp-for="ModelId" id="modelInput" class="form-select" aria-label="Default select example">
					</select>
					<span asp-validation-for="ModelId" class="text text-danger"></span>
		
			</div>
				<div class="col-sm">
					<label asp-for="FabricationYear">Fabrication Year:</label>
					<input type="number" asp-for="FabricationYear" class="form-control" min="1900" max="2026" />
					<span asp-validation-for="FabricationYear" class="text text-danger"></span>
			</div>
			</div>
		</div>
		<div class="form-group">
			<div class="row">
				<div class="col-sm">
		         	<label asp-for="FuelId">Fuel:</label>
					<select asp-for="FuelId" class="form-select" aria-label="Default select example">
						@foreach (var item in ViewBag.Fuels)
						{
							<option value="@item.Id">@item.Name</option>
						}
					</select>
					<span asp-validation-for="FuelId" class="text text-danger"></span>
				</div>
				<div class="col-sm">
					<label asp-for="FuelCity">Fuel City:</label>
					<input min="0" class="form-control" asp-for="FuelCity" />
					<span asp-validation-for="FuelCity" class="text text-danger"></span>
				</div>
				<div class="col-sm">
					<label asp-for="FuelWay">Fuel Way:</label>
					<input min="0" class="form-control" asp-for="FuelWay" />
					<span asp-validation-for="FuelWay" class="text text-danger"></span>
				</div>
			</div>
		</div>
		<div class="form-group">
			<div class="row">
				<div class="col-sm">
					<label asp-for="Transmission">Transmission:</label>
					<select asp-for="Transmission" class="form-select" aria-label="Default select example">
						<option value="Manual">Manual</option>
						<option value="Automatic">Automatic</option>
						<option value="CVT">CVT</option>
					</select>
					<span asp-validation-for="Transmission" class="text text-danger"></span>
				</div>
				<div class="col-sm">
					<label asp-for="NoGears">Gears:</label>
					<input min="1" class="form-control" asp-for="NoGears" />
					<span asp-validation-for="NoGears" class="text text-danger"></span>
				</div>
				<div class="col-sm">
					<label asp-for="Odometer">Odometer:</label>
					<input class="form-control" asp-for="Odometer" />
					<span asp-validation-for="Odometer" class="text text-danger"></span>
				</div>
				
				<div class="col-sm">
					<label asp-for="Motor">Motor:</label>
					<input class="form-control" asp-for="Motor" />
					<span asp-validation-for="Motor" class="text text-danger"></span>
				</div>
			</div>
		</div>
		<div class="form-group">
			<div class="row">
				<div class="col-sm">
					<label asp-for="AppUserId">User:</label>
					<select asp-for="AppUserId" class="form-select" aria-label="Default select example">
						@foreach (var item in ViewBag.Users)
						{
							<option value="@item.Id">@item.Name @item.Surname</option>
						}
					</select>
					<span asp-validation-for="AppUserId" class="text text-danger"></span>
				</div>
				<div class="col-sm">
					<label asp-for="ColorId">Color:</label>
					<select asp-for="ColorId" id="colors" class="form-select" aria-label="Default select example">
						@foreach (var item in ViewBag.Colors)
						{
												<option value="@item.Id" style="color:@item.Name">&#11044; @item.Name</option>
						}
					</select>
					<span asp-validation-for="ColorId" class="text text-danger"></span>
				</div>
				<div class="col-sm">
					<label asp-for="ActionDate">Action Date:</label>
					<input class="form-control" asp-for="ActionDate" />
					<span asp-validation-for="ActionDate" class="text text-danger"></span>
				</div>
				<div class="col-sm">
					<label asp-for="Price">Price:</label>
					<input class="form-control" asp-for="Price" />
					<span asp-validation-for="Price" class="text text-danger"></span>
				</div>
			</div>
		</div>
		<div class="form-group">
			<label asp-for="Description">Description:</label>
			<textarea class="form-control" asp-for="Description" ></textarea>
			<span asp-validation-for="Description" class="text text-danger"></span>
		</div>
		<div class="form-group">
			<label asp-for="@Model.FormFiles">File:</label>
			<input multiple type="file" class="form-control" asp-for="@Model.FormFiles" />
			<span asp-validation-for="FormFiles" class="text text-danger"></span>

		</div>
			@Html.AntiForgeryToken()
		<button type="submit" style="width:100%; " class="btn btn-outline-dark">Create</button>
	</form>
</div>
<script>
	document.addEventListener("DOMContentLoaded", function () {
		const modelInput = document.getElementById("modelInput");
		const brandInput = document.getElementById("brandInput");

		if (!brandInput || !modelInput) {
			console.error("Brand or Model input not found.");
			return;
		}

		const API_URL = "https://localhost:7030/car/GetAllModel";

		// Function to resolve circular references
		function resolveReferences(data) {
			const cache = new Map();

			function resolve(obj) {
				if (obj && obj.$ref) {
					return cache.get(obj.$ref);
				}
				if (obj && typeof obj === 'object') {
					if (obj.$id) {
						cache.set(obj.$id, obj);
					}
					for (const key in obj) {
						obj[key] = resolve(obj[key]);
					}
				}
				return obj;
			}

			return resolve(data);
		}

		async function fetchModels() {
			try {
				const response = await fetch(API_URL);
				if (!response.ok) {
					throw new Error(`HTTP error! Status: ${response.status}`);
				}
				const data = await response.json();

				// Resolve circular references
				const resolvedData = resolveReferences(data);

				// Extract the models array
				return resolvedData.$values || [];
			} catch (error) {
				console.error("Error fetching models:", error);
				alert("Failed to load car models. Please check the console.");
				return [];
			}
		}

		function updateModels(models, selectedBrandId) {
			modelInput.innerHTML = ""; // Clear previous options

			// Add default "Select a Model" option
			const defaultOption = document.createElement("option");
			defaultOption.value = "";
			defaultOption.textContent = "Select a Model";
			modelInput.appendChild(defaultOption);

			// Filter models for the selected brand
			const filteredModels = models.filter(model => {
				return model.brandId == selectedBrandId; // Use loose equality
			});

			if (filteredModels.length === 0) {
				console.warn("No models found for brand ID:", selectedBrandId);
				return;
			}

			// Populate the dropdown with filtered models
			filteredModels.forEach(model => {
				const option = document.createElement("option");
				option.value = model.id;
				option.textContent = model.name;
				modelInput.appendChild(option);
			});
		}

		async function initializeForm() {
			const models = await fetchModels();

			if (models.length > 0) {
				// Initial population
				updateModels(models, brandInput.value);

				// Update on brand change
				brandInput.addEventListener("change", () => {
					updateModels(models, brandInput.value);
				});
			} else {
				console.error("No models found.");
			}
		}

		initializeForm();
	});
</script>